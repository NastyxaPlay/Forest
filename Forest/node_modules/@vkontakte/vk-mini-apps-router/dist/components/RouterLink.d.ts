import { RelativeRoutingType, To } from '@remix-run/router';
import { AnchorHTMLAttributes, CSSProperties, ReactNode } from 'react';
export interface LinkProps extends Omit<AnchorHTMLAttributes<HTMLAnchorElement>, 'href'> {
    reloadDocument?: boolean;
    replace?: boolean;
    relative?: RelativeRoutingType;
    to: To;
}
export interface RouterLinkProps extends Omit<LinkProps, 'className' | 'style' | 'children'> {
    children?: ReactNode | ((props: {
        isActive: boolean;
        isPending: boolean;
    }) => ReactNode);
    caseSensitive?: boolean;
    className?: string | ((props: {
        isActive: boolean;
        isPending: boolean;
    }) => string | undefined);
    end?: boolean;
    style?: CSSProperties | ((props: {
        isActive: boolean;
        isPending: boolean;
    }) => CSSProperties | undefined);
}
export declare const RouterLink: import("react").ForwardRefExoticComponent<RouterLinkProps & import("react").RefAttributes<HTMLAnchorElement>>;
//# sourceMappingURL=RouterLink.d.ts.map