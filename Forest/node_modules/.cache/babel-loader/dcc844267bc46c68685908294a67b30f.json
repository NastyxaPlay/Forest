{"ast":null,"code":"import { uniqueKey } from './common';\nexport class RoutesConfig {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {\n    this.items = [];\n  }\n\n  getRoutes() {\n    return this.items.map(item => item.getRoutes()).flat();\n  }\n\n  static create(routes) {\n    const config = new RoutesConfig();\n    config.items = routes;\n    routes.forEach(route => {\n      // @ts-expect-error\n      config[uniqueKey(config, route.id)] = route;\n    });\n    return config;\n  }\n\n}","map":{"version":3,"mappings":"AAEA,SAAqCA,SAArC,QAAsD,UAAtD;AAWA,OAAM,MAAOC,YAAP,CAAmB;EAGvB;EACAC;IAHQ,aAAqD,EAArD;EAGgB;;EAExBC,SAAS;IACP,OAAO,KAAKC,KAAL,CAAWC,GAAX,CAAgBC,IAAD,IAAUA,IAAI,CAACH,SAAL,EAAzB,EAA2CI,IAA3C,EAAP;EACD;;EA2BY,OAANC,MAAM,CAACC,MAAD,EAAoD;IAC/D,MAAMC,MAAM,GAAG,IAAIT,YAAJ,EAAf;IACAS,MAAM,CAACN,KAAP,GAAeK,MAAf;IACAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAU;MACvB;MACAF,MAAM,CAACV,SAAS,CAACU,MAAD,EAASE,KAAK,CAACC,EAAf,CAAV,CAAN,GAAsCD,KAAtC;IACD,CAHD;IAIA,OAAOF,MAAP;EACD;;AA3CsB","names":["uniqueKey","RoutesConfig","constructor","getRoutes","items","map","item","flat","create","routes","config","forEach","route","id"],"sources":["C:\\Users\\nasti\\Desktop\\VK\\ForestEm\\Forest\\node_modules\\@vkontakte\\vk-mini-apps-router\\src\\page-types\\RoutesConfig.ts"],"sourcesContent":["import { RootConfig } from './RootConfig';\nimport { ViewConfig } from './ViewConfig';\nimport { AddChild, RepresentsRoutes, uniqueKey } from './common';\nimport { CommonRouteObject } from '../type';\n\ninterface RoutePartial extends CommonRouteObject {\n  root?: string;\n  view: string;\n  panel: string;\n  modal?: string;\n  tab?: string;\n}\n\nexport class RoutesConfig implements RepresentsRoutes<RoutePartial> {\n  private items: ViewConfig<string>[] | RootConfig<string>[] = [];\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  private constructor() {}\n\n  getRoutes(): RoutePartial[] {\n    return this.items.map((item) => item.getRoutes()).flat();\n  }\n\n  static create<\n    A extends RootConfig<string>, B extends RootConfig<string>, C extends RootConfig<string>, D extends RootConfig<string>,\n    E extends RootConfig<string>\n  >(routes: [A, B, C, D, E]): AddChild<AddChild<AddChild<AddChild<AddChild<RoutesConfig, A>, B>, C>, D>, E>\n  static create<\n    A extends RootConfig<string>, B extends RootConfig<string>, C extends RootConfig<string>, D extends RootConfig<string>\n  >(routes: [A, B, C, D]): AddChild<AddChild<AddChild<AddChild<RoutesConfig, A>, B>, C>, D>\n  static create<\n    A extends RootConfig<string>, B extends RootConfig<string>, C extends RootConfig<string>\n  >(routes: [A, B, C]): AddChild<AddChild<AddChild<RoutesConfig, A>, B>, C>\n  static create<A extends RootConfig<string>, B extends RootConfig<string>>(routes: [A, B]): AddChild<AddChild<RoutesConfig, A>, B>\n  static create<A extends RootConfig<string>>(routes: [A]): AddChild<RoutesConfig, A>\n\n  static create<\n    A extends ViewConfig<string>, B extends ViewConfig<string>, C extends ViewConfig<string>, D extends ViewConfig<string>,\n    E extends ViewConfig<string>\n  >(routes: [A, B, C, D, E]): AddChild<AddChild<AddChild<AddChild<AddChild<RoutesConfig, A>, B>, C>, D>, E>\n  static create<\n    A extends ViewConfig<string>, B extends ViewConfig<string>, C extends ViewConfig<string>, D extends ViewConfig<string>\n  >(routes: [A, B, C, D]): AddChild<AddChild<AddChild<AddChild<RoutesConfig, A>, B>, C>, D>\n  static create<\n    A extends ViewConfig<string>, B extends ViewConfig<string>, C extends ViewConfig<string>\n  >(routes: [A, B, C]): AddChild<AddChild<AddChild<RoutesConfig, A>, B>, C>\n  static create<A extends ViewConfig<string>, B extends ViewConfig<string>>(routes: [A, B]): AddChild<AddChild<RoutesConfig, A>, B>\n  static create<A extends ViewConfig<string>>(routes: [A]): AddChild<RoutesConfig, A>\n  static create(routes: ViewConfig<string>[] | RootConfig<string>[]): RoutesConfig {\n    const config = new RoutesConfig();\n    config.items = routes;\n    routes.forEach((route) => {\n      // @ts-expect-error\n      config[uniqueKey(config, route.id)] = route;\n    });\n    return config;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}