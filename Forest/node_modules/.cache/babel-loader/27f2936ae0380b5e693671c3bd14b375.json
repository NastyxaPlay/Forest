{"ast":null,"code":"import { PopoutContext, RouteContext, RouterContext } from '../contexts';\nimport { UNSAFE_invariant as invariant } from '@remix-run/router';\nimport { useThrottledContext } from './useThrottledContext';\nexport function useRouteNavigator() {\n  const [routerContext] = useThrottledContext(RouterContext);\n  invariant(routerContext, 'You can not use useNavigator hook outside of RouterContext. Make sure calling it inside RouterProvider.');\n  return routerContext.routeNavigator;\n}\nexport function useParams(id) {\n  const [routeContext, prevRouteContext] = useThrottledContext(RouteContext);\n  invariant(routeContext, 'You can not use useParams hook outside of RouteContext. Make sure calling it inside RouterProvider.');\n  const match = id && prevRouteContext && Object.keys(id).every(key => (routeContext.match?.route)[key] !== id[key]) && Object.keys(id).every(key => (prevRouteContext.match?.route)[key] === id[key]) ? prevRouteContext.match : routeContext.match;\n  return match?.params;\n}\nexport function useLocation() {\n  const [routeContext] = useThrottledContext(RouteContext);\n  invariant(routeContext, 'You can not use useLocation hook outside of RouteContext. Make sure calling it inside RouterProvider.');\n  return routeContext.state.location;\n}\nexport function usePopout() {\n  const [popoutContext] = useThrottledContext(PopoutContext);\n  return popoutContext.popout;\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,EAAwBC,YAAxB,EAAsCC,aAAtC,QAA2D,aAA3D;AACA,SAA2BC,gBAAgB,IAAIC,SAA/C,QAAgE,mBAAhE;AAEA,SAASC,mBAAT,QAAoC,uBAApC;AAGA,OAAM,SAAUC,iBAAV,GAA2B;EAC/B,MAAM,CAACC,aAAD,IAAkBF,mBAAmB,CAACH,aAAD,CAA3C;EACAE,SAAS,CAACG,aAAD,EAAgB,yGAAhB,CAAT;EACA,OAAOA,aAAa,CAACC,cAArB;AACD;AASD,OAAM,SAAUC,SAAV,CAA+CC,EAA/C,EAAyD;EAC7D,MAAM,CAACC,YAAD,EAAeC,gBAAf,IAAmCP,mBAAmB,CAACJ,YAAD,CAA5D;EACAG,SAAS,CAACO,YAAD,EAAe,qGAAf,CAAT;EACA,MAAME,KAAK,GAAGH,EAAE,IACXE,gBADS,IAERE,MAAM,CAACC,IAAP,CAAYL,EAAZ,EAA+CM,KAA/C,CAAsDC,GAAD,IAAS,CAACN,YAAY,CAACE,KAAb,EAAoBK,KAArB,EAA6CD,GAA7C,MAAsDP,EAAE,CAACO,GAAD,CAAtH,CAFQ,IAGRH,MAAM,CAACC,IAAP,CAAYL,EAAZ,EAA+CM,KAA/C,CAAsDC,GAAD,IAAS,CAACL,gBAAgB,CAACC,KAAjB,EAAwBK,KAAzB,EAAiDD,GAAjD,MAA0DP,EAAE,CAACO,GAAD,CAA1H,CAHQ,GAIVL,gBAAgB,CAACC,KAJP,GAIeF,YAAY,CAACE,KAJ1C;EAKA,OAAOA,KAAK,EAAEM,MAAd;AACD;AAED,OAAM,SAAUC,WAAV,GAAqB;EACzB,MAAM,CAACT,YAAD,IAAiBN,mBAAmB,CAACJ,YAAD,CAA1C;EACAG,SAAS,CAACO,YAAD,EAAe,uGAAf,CAAT;EACA,OAAOA,YAAY,CAACU,KAAb,CAAmBC,QAA1B;AACD;AAED,OAAM,SAAUC,SAAV,GAAmB;EACvB,MAAM,CAACC,aAAD,IAAkBnB,mBAAmB,CAACL,aAAD,CAA3C;EACA,OAAOwB,aAAa,CAACC,MAArB;AACD","names":["PopoutContext","RouteContext","RouterContext","UNSAFE_invariant","invariant","useThrottledContext","useRouteNavigator","routerContext","routeNavigator","useParams","id","routeContext","prevRouteContext","match","Object","keys","every","key","route","params","useLocation","state","location","usePopout","popoutContext","popout"],"sources":["C:\\Users\\nasti\\Desktop\\VK\\ForestEm\\Forest\\node_modules\\@vkontakte\\vk-mini-apps-router\\src\\hooks\\hooks.ts"],"sourcesContent":["import { PopoutContext, RouteContext, RouterContext } from '../contexts';\nimport { Location, Params, UNSAFE_invariant as invariant } from '@remix-run/router';\nimport { RouteNavigator } from '../services/RouteNavigator.type';\nimport { useThrottledContext } from './useThrottledContext';\nimport { ModalWithRoot } from '../type';\n\nexport function useRouteNavigator(): RouteNavigator {\n  const [routerContext] = useThrottledContext(RouterContext);\n  invariant(routerContext, 'You can not use useNavigator hook outside of RouterContext. Make sure calling it inside RouterProvider.');\n  return routerContext.routeNavigator;\n}\n\ntype RequireOnlyOne<T, Keys extends keyof T = keyof T> =\n  Pick<T, Exclude<keyof T, Keys>>\n  & { [K in Keys]-?: Required<Pick<T, K>> & Partial<Record<Exclude<Keys, K>, undefined>> }[Keys];\n\ntype AnimatedParts = Pick<ModalWithRoot, 'tab' | 'panel' | 'modal'>;\ntype NavId = RequireOnlyOne<AnimatedParts>;\n\nexport function useParams<T extends string = string>(id?: NavId): Params<T> | undefined {\n  const [routeContext, prevRouteContext] = useThrottledContext(RouteContext);\n  invariant(routeContext, 'You can not use useParams hook outside of RouteContext. Make sure calling it inside RouterProvider.');\n  const match = id\n    && prevRouteContext\n    && (Object.keys(id) as unknown as (keyof NavId)[]).every((key) => (routeContext.match?.route as ModalWithRoot)[key] !== id[key])\n    && (Object.keys(id) as unknown as (keyof NavId)[]).every((key) => (prevRouteContext.match?.route as ModalWithRoot)[key] === id[key])\n    ? prevRouteContext.match : routeContext.match;\n  return match?.params;\n}\n\nexport function useLocation(): Location {\n  const [routeContext] = useThrottledContext(RouteContext);\n  invariant(routeContext, 'You can not use useLocation hook outside of RouteContext. Make sure calling it inside RouterProvider.');\n  return routeContext.state.location;\n}\n\nexport function usePopout(): JSX.Element | null {\n  const [popoutContext] = useThrottledContext(PopoutContext);\n  return popoutContext.popout;\n}\n"]},"metadata":{},"sourceType":"module"}