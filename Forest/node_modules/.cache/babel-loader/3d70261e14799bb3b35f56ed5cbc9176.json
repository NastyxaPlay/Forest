{"ast":null,"code":"import { UNSAFE_invariant as invariant } from '@remix-run/router';\nimport { RouterContext } from '../contexts';\nimport { useContext } from 'react';\nimport { useResolvedPath } from './useResolvedPath';\nexport function useHref(to) {\n  let {\n    relative\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const routeContext = useContext(RouterContext);\n  invariant(routeContext, 'You can not use useHref hook outside of RouteContext. Make sure calling it inside RouterProvider.');\n  const {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  return routeContext.router.createHref({\n    pathname,\n    search,\n    hash\n  });\n}","map":{"version":3,"mappings":"AAAA,SAA4CA,gBAAgB,IAAIC,SAAhE,QAAiF,mBAAjF;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,OAAM,SAAUC,OAAV,CACJC,EADI,EAEiD;EAAA,IAArD;IAAEC;EAAF,CAAqD,uEAAF,EAAE;EAErD,MAAMC,YAAY,GAAGL,UAAU,CAACD,aAAD,CAA/B;EACAD,SAAS,CAACO,YAAD,EAAe,mGAAf,CAAT;EAEA,MAAM;IAAEC,IAAF;IAAQC,QAAR;IAAkBC;EAAlB,IAA6BP,eAAe,CAACE,EAAD,EAAK;IAAEC;EAAF,CAAL,CAAlD;EAEA,OAAOC,YAAY,CAACI,MAAb,CAAoBC,UAApB,CAA+B;IAAEH,QAAF;IAAYC,MAAZ;IAAoBF;EAApB,CAA/B,CAAP;AACD","names":["UNSAFE_invariant","invariant","RouterContext","useContext","useResolvedPath","useHref","to","relative","routeContext","hash","pathname","search","router","createHref"],"sources":["C:\\Users\\nasti\\Desktop\\VK\\ForestEm\\Forest\\node_modules\\@vkontakte\\vk-mini-apps-router\\src\\hooks\\useHref.ts"],"sourcesContent":["import { Location, RelativeRoutingType, To, UNSAFE_invariant as invariant } from '@remix-run/router';\nimport { RouterContext } from '../contexts';\nimport { useContext } from 'react';\nimport { useResolvedPath } from './useResolvedPath';\n\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  const routeContext = useContext(RouterContext);\n  invariant(routeContext, 'You can not use useHref hook outside of RouteContext. Make sure calling it inside RouterProvider.');\n\n  const { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  return routeContext.router.createHref({ pathname, search, hash } as Location);\n}\n"]},"metadata":{},"sourceType":"module"}