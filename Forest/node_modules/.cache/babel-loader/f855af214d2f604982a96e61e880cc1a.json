{"ast":null,"code":"export function hasNavigationOptionsKeys(object) {\n  const base = {\n    keepSearchParams: true,\n    state: {}\n  };\n  return Object.keys(object).some(key => key in base);\n}","map":{"version":3,"mappings":"AAQA,OAAM,SAAUA,wBAAV,CAAiDC,MAAjD,EAA0D;EAC9D,MAAMC,IAAI,GAAgC;IACxCC,gBAAgB,EAAE,IADsB;IAExCC,KAAK,EAAE;EAFiC,CAA1C;EAIA,OAAOC,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,IAApB,CAA0BC,GAAD,IAASA,GAAG,IAAIN,IAAzC,CAAP;AACD","names":["hasNavigationOptionsKeys","object","base","keepSearchParams","state","Object","keys","some","key"],"sources":["C:\\Users\\nasti\\Desktop\\VK\\ForestEm\\Forest\\node_modules\\@vkontakte\\vk-mini-apps-router\\src\\services\\RouteNavigator.type.ts"],"sourcesContent":["import { Page, PageWithParams } from '../page-types/common';\nimport { BlockerFunction, Params } from '@remix-run/router';\n\nexport interface NavigationOptions {\n  keepSearchParams?: boolean;\n  state?: Object;\n}\n\nexport function hasNavigationOptionsKeys<T extends {}>(object: T): boolean {\n  const base: Required<NavigationOptions> = {\n    keepSearchParams: true,\n    state: {},\n  };\n  return Object.keys(object).some((key) => key in base);\n}\n\nexport interface RouteNavigator {\n  push<T extends string>(\n    to: PageWithParams<T>,\n    params: Params<T>,\n    options?: NavigationOptions,\n  ): Promise<void>;\n  push(to: string | Page, options?: NavigationOptions): Promise<void>;\n\n  replace<T extends string>(\n    to: PageWithParams<T>,\n    params: Params<T>,\n    options?: NavigationOptions,\n  ): Promise<void>;\n  replace(to: string | Page, options?: NavigationOptions): Promise<void>;\n\n  back(to?: number): Promise<void>;\n\n  backToFirst(): Promise<void>;\n\n  go(to: number): Promise<void>;\n\n  showModal(id: string): Promise<void>;\n\n  block(onLeave: BlockerFunction): () => void;\n\n  /**\n   * Закрыть модальное окно, открытое методом showModal или навигацией (push/replace/back).\n   *\n   * @param pushPanel Установите значение в true, если хотите выполнить PUSH навигацию.\n   * В случае, если модальное окно было открыто через навигацию, можно закрыть окно шагом назад\n   * или навигацией вперед на родительскую панель.<br>\n   * По умолчанию false.\n   */\n  hideModal(pushPanel?: boolean): Promise<void>;\n\n  showPopout(popout: JSX.Element): Promise<void>;\n\n  hidePopout(): Promise<void>;\n\n  runSync(actions: VoidFunction[]): Promise<void>;\n}\n"]},"metadata":{},"sourceType":"module"}