{"ast":null,"code":"import { useEffect } from 'react';\nimport { STATE_KEY_BLOCK_FORWARD_NAVIGATION, STATE_KEY_SHOW_MODAL, STATE_KEY_SHOW_POPOUT } from '../const';\nconst processedKeys = [];\nexport function useBlockForwardToModals(router, viewHistory, routeNavigator) {\n  useEffect(() => {\n    const blockerFunction = _ref => {\n      let {\n        historyAction,\n        nextLocation\n      } = _ref;\n      const isPopForward = viewHistory.isPopForward(historyAction, nextLocation.key);\n      const blockEnabled = isPopForward && nextLocation.key !== 'default';\n      return Boolean(blockEnabled && nextLocation.state?.[STATE_KEY_BLOCK_FORWARD_NAVIGATION]);\n    };\n\n    const unbblocker = routeNavigator.block(blockerFunction);\n    return () => unbblocker();\n  }, [routeNavigator, viewHistory]);\n  useEffect(() => {\n    router.subscribe(state => {\n      const key = state.location.key;\n      const isPopBackward = viewHistory.isPopBackward(state.historyAction, key);\n\n      if (isPopBackward && state.location.state?.[STATE_KEY_BLOCK_FORWARD_NAVIGATION] && !processedKeys.includes(key)) {\n        processedKeys.push(key);\n        const replaceState = { ...window.history.state\n        };\n\n        if (replaceState.usr?.[STATE_KEY_SHOW_MODAL]) {\n          replaceState.usr = { ...replaceState.usr\n          };\n          delete replaceState.usr?.[STATE_KEY_SHOW_MODAL];\n          delete replaceState.usr?.[STATE_KEY_BLOCK_FORWARD_NAVIGATION];\n        }\n\n        if (replaceState.usr?.[STATE_KEY_SHOW_POPOUT]) {\n          replaceState.usr = { ...replaceState.usr\n          };\n          delete replaceState.usr?.[STATE_KEY_SHOW_POPOUT];\n          delete replaceState.usr?.[STATE_KEY_BLOCK_FORWARD_NAVIGATION];\n        }\n\n        window.history.replaceState(replaceState, '');\n        router.navigate(-1).then(() => processedKeys.splice(processedKeys.findIndex(name => name === key), 1));\n      }\n    });\n  }, [router, viewHistory]);\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SACEC,kCADF,EAEEC,oBAFF,EAGEC,qBAHF,QAIO,UAJP;AAQA,MAAMC,aAAa,GAAa,EAAhC;AAEA,OAAM,SAAUC,uBAAV,CACJC,MADI,EAEJC,WAFI,EAGJC,cAHI,EAG0B;EAE9BR,SAAS,CAAC,MAAK;IACb,MAAMS,eAAe,GAAoB,QAAoC;MAAA,IAAnC;QAAEC,aAAF;QAAiBC;MAAjB,CAAmC;MAC3E,MAAMC,YAAY,GAAGL,WAAW,CAACK,YAAZ,CAAyBF,aAAzB,EAAwCC,YAAY,CAACE,GAArD,CAArB;MACA,MAAMC,YAAY,GAAGF,YAAY,IAAID,YAAY,CAACE,GAAb,KAAqB,SAA1D;MACA,OAAOE,OAAO,CAACD,YAAY,IAAIH,YAAY,CAACK,KAAb,GAAqBf,kCAArB,CAAjB,CAAd;IACD,CAJD;;IAKA,MAAMgB,UAAU,GAAGT,cAAc,CAACU,KAAf,CAAqBT,eAArB,CAAnB;IAEA,OAAO,MAAMQ,UAAU,EAAvB;EACD,CATQ,EASN,CAACT,cAAD,EAAiBD,WAAjB,CATM,CAAT;EAWAP,SAAS,CAAC,MAAK;IACbM,MAAM,CAACa,SAAP,CAAkBH,KAAD,IAAU;MACzB,MAAMH,GAAG,GAAGG,KAAK,CAACI,QAAN,CAAeP,GAA3B;MACA,MAAMQ,aAAa,GAAGd,WAAW,CAACc,aAAZ,CAA0BL,KAAK,CAACN,aAAhC,EAA+CG,GAA/C,CAAtB;;MACA,IACEQ,aAAa,IACbL,KAAK,CAACI,QAAN,CAAeJ,KAAf,GAAuBf,kCAAvB,CADA,IAEA,CAACG,aAAa,CAACkB,QAAd,CAAuBT,GAAvB,CAHH,EAIE;QACAT,aAAa,CAACmB,IAAd,CAAmBV,GAAnB;QACA,MAAMW,YAAY,GAAG,EAAE,GAAGC,MAAM,CAACC,OAAP,CAAeV;QAApB,CAArB;;QACA,IAAIQ,YAAY,CAACG,GAAb,GAAmBzB,oBAAnB,CAAJ,EAA8C;UAC5CsB,YAAY,CAACG,GAAb,GAAmB,EAAE,GAAGH,YAAY,CAACG;UAAlB,CAAnB;UACA,OAAOH,YAAY,CAACG,GAAb,GAAmBzB,oBAAnB,CAAP;UACA,OAAOsB,YAAY,CAACG,GAAb,GAAmB1B,kCAAnB,CAAP;QACD;;QACD,IAAIuB,YAAY,CAACG,GAAb,GAAmBxB,qBAAnB,CAAJ,EAA+C;UAC7CqB,YAAY,CAACG,GAAb,GAAmB,EAAE,GAAGH,YAAY,CAACG;UAAlB,CAAnB;UACA,OAAOH,YAAY,CAACG,GAAb,GAAmBxB,qBAAnB,CAAP;UACA,OAAOqB,YAAY,CAACG,GAAb,GAAmB1B,kCAAnB,CAAP;QACD;;QACDwB,MAAM,CAACC,OAAP,CAAeF,YAAf,CAA4BA,YAA5B,EAA0C,EAA1C;QACAlB,MAAM,CAACsB,QAAP,CAAgB,CAAC,CAAjB,EAAoBC,IAApB,CAAyB,MACvBzB,aAAa,CAAC0B,MAAd,CACE1B,aAAa,CAAC2B,SAAd,CAAyBC,IAAD,IAAUA,IAAI,KAAKnB,GAA3C,CADF,EAEE,CAFF,CADF;MAMD;IACF,CA5BD;EA6BD,CA9BQ,EA8BN,CAACP,MAAD,EAASC,WAAT,CA9BM,CAAT;AA+BD","names":["useEffect","STATE_KEY_BLOCK_FORWARD_NAVIGATION","STATE_KEY_SHOW_MODAL","STATE_KEY_SHOW_POPOUT","processedKeys","useBlockForwardToModals","router","viewHistory","routeNavigator","blockerFunction","historyAction","nextLocation","isPopForward","key","blockEnabled","Boolean","state","unbblocker","block","subscribe","location","isPopBackward","includes","push","replaceState","window","history","usr","navigate","then","splice","findIndex","name"],"sources":["C:\\Users\\nasti\\Desktop\\VK\\ForestEm\\Forest\\node_modules\\@vkontakte\\vk-mini-apps-router\\src\\hooks\\useBlockForwardToModals.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { BlockerFunction, Router } from '@remix-run/router';\nimport {\n  STATE_KEY_BLOCK_FORWARD_NAVIGATION,\n  STATE_KEY_SHOW_MODAL,\n  STATE_KEY_SHOW_POPOUT,\n} from '../const';\nimport { ViewHistory } from '../services/ViewHistory';\nimport { RouteNavigator } from '../services/RouteNavigator.type';\n\nconst processedKeys: string[] = [];\n\nexport function useBlockForwardToModals(\n  router: Router,\n  viewHistory: ViewHistory,\n  routeNavigator: RouteNavigator,\n) {\n  useEffect(() => {\n    const blockerFunction: BlockerFunction = ({ historyAction, nextLocation }) => {\n      const isPopForward = viewHistory.isPopForward(historyAction, nextLocation.key);\n      const blockEnabled = isPopForward && nextLocation.key !== 'default';\n      return Boolean(blockEnabled && nextLocation.state?.[STATE_KEY_BLOCK_FORWARD_NAVIGATION]);\n    };\n    const unbblocker = routeNavigator.block(blockerFunction);\n\n    return () => unbblocker()\n  }, [routeNavigator, viewHistory]);\n\n  useEffect(() => {\n    router.subscribe((state) => {\n      const key = state.location.key;\n      const isPopBackward = viewHistory.isPopBackward(state.historyAction, key);\n      if (\n        isPopBackward &&\n        state.location.state?.[STATE_KEY_BLOCK_FORWARD_NAVIGATION] &&\n        !processedKeys.includes(key)\n      ) {\n        processedKeys.push(key);\n        const replaceState = { ...window.history.state };\n        if (replaceState.usr?.[STATE_KEY_SHOW_MODAL]) {\n          replaceState.usr = { ...replaceState.usr };\n          delete replaceState.usr?.[STATE_KEY_SHOW_MODAL];\n          delete replaceState.usr?.[STATE_KEY_BLOCK_FORWARD_NAVIGATION];\n        }\n        if (replaceState.usr?.[STATE_KEY_SHOW_POPOUT]) {\n          replaceState.usr = { ...replaceState.usr };\n          delete replaceState.usr?.[STATE_KEY_SHOW_POPOUT];\n          delete replaceState.usr?.[STATE_KEY_BLOCK_FORWARD_NAVIGATION];\n        }\n        window.history.replaceState(replaceState, '');\n        router.navigate(-1).then(() =>\n          processedKeys.splice(\n            processedKeys.findIndex((name) => name === key),\n            1,\n          ),\n        );\n      }\n    });\n  }, [router, viewHistory]);\n}\n"]},"metadata":{},"sourceType":"module"}