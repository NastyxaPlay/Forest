{"ast":null,"code":"import bridge from '@vkontakte/vk-bridge';\nimport { createKey } from '../utils/utils';\nexport class BridgeService {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor() {\n    this.swipeBackConsumers = [];\n  }\n\n  static enableNativeSwipeBack() {\n    void bridge.send('VKWebAppSetSwipeSettings', {\n      history: true\n    });\n    void bridge.send('VKWebAppEnableSwipeBack');\n    const instance = BridgeService.instance;\n    const consumerId = createKey();\n    instance.swipeBackConsumers = [...instance.swipeBackConsumers, consumerId];\n    return consumerId;\n  }\n\n  static disableNativeSwipeBack(consumerId) {\n    const instance = BridgeService.instance;\n    /**\n     * Тот, кто попросил отключить нативный свайпбек, выходит из списка.\n     */\n\n    instance.swipeBackConsumers = instance.swipeBackConsumers.filter(id => id !== consumerId);\n    /**\n     * Нативный свайпбек будет отключен только если больше не осталось тех, кому он нужен.\n     */\n\n    if (instance.swipeBackConsumers.length === 0) {\n      void bridge.send('VKWebAppSetSwipeSettings', {\n        history: false\n      });\n      void bridge.send('VKWebAppDisableSwipeBack');\n    }\n  }\n\n  static get instance() {\n    if (!BridgeService._instance) {\n      BridgeService._instance = new BridgeService();\n    }\n\n    return BridgeService._instance;\n  }\n\n}","map":{"version":3,"mappings":"AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,OAAM,MAAOC,aAAP,CAAoB;EAKxB;EACAC;IALQ,0BAA+B,EAA/B;EAKgB;;EAEI,OAArBC,qBAAqB;IAC1B,KAAKJ,MAAM,CAACK,IAAP,CAAY,0BAAZ,EAAwC;MAAEC,OAAO,EAAE;IAAX,CAAxC,CAAL;IACA,KAAKN,MAAM,CAACK,IAAP,CAAY,yBAAZ,CAAL;IACA,MAAME,QAAQ,GAAGL,aAAa,CAACK,QAA/B;IAEA,MAAMC,UAAU,GAAGP,SAAS,EAA5B;IAEAM,QAAQ,CAACE,kBAAT,GAA8B,CAAC,GAAGF,QAAQ,CAACE,kBAAb,EAAiCD,UAAjC,CAA9B;IAEA,OAAOA,UAAP;EACD;;EAE4B,OAAtBE,sBAAsB,CAACF,UAAD,EAAmB;IAC9C,MAAMD,QAAQ,GAAGL,aAAa,CAACK,QAA/B;IACA;;;;IAGAA,QAAQ,CAACE,kBAAT,GAA8BF,QAAQ,CAACE,kBAAT,CAA4BE,MAA5B,CAC3BC,EAAD,IAAQA,EAAE,KAAKJ,UADa,CAA9B;IAIA;;;;IAGA,IAAID,QAAQ,CAACE,kBAAT,CAA4BI,MAA5B,KAAuC,CAA3C,EAA8C;MAC5C,KAAKb,MAAM,CAACK,IAAP,CAAY,0BAAZ,EAAwC;QAAEC,OAAO,EAAE;MAAX,CAAxC,CAAL;MACA,KAAKN,MAAM,CAACK,IAAP,CAAY,0BAAZ,CAAL;IACD;EACF;;EAE0B,WAARE,QAAQ;IACzB,IAAI,CAACL,aAAa,CAACY,SAAnB,EAA8B;MAC5BZ,aAAa,CAACY,SAAd,GAA0B,IAAIZ,aAAJ,EAA1B;IACD;;IACD,OAAOA,aAAa,CAACY,SAArB;EACD;;AA3CuB","names":["bridge","createKey","BridgeService","constructor","enableNativeSwipeBack","send","history","instance","consumerId","swipeBackConsumers","disableNativeSwipeBack","filter","id","length","_instance"],"sources":["C:\\Users\\nasti\\Desktop\\VK\\ForestEm\\Forest\\node_modules\\@vkontakte\\vk-mini-apps-router\\src\\services\\BridgeService.ts"],"sourcesContent":["import bridge from '@vkontakte/vk-bridge';\nimport { createKey } from '../utils/utils';\n\nexport class BridgeService {\n  private swipeBackConsumers: string[] = [];\n\n  private static _instance: BridgeService | undefined;\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  private constructor() {}\n\n  static enableNativeSwipeBack(): string {\n    void bridge.send('VKWebAppSetSwipeSettings', { history: true });\n    void bridge.send('VKWebAppEnableSwipeBack');\n    const instance = BridgeService.instance;\n\n    const consumerId = createKey();\n\n    instance.swipeBackConsumers = [...instance.swipeBackConsumers, consumerId];\n\n    return consumerId;\n  }\n\n  static disableNativeSwipeBack(consumerId: string) {\n    const instance = BridgeService.instance;\n    /**\n     * Тот, кто попросил отключить нативный свайпбек, выходит из списка.\n     */\n    instance.swipeBackConsumers = instance.swipeBackConsumers.filter(\n      (id) => id !== consumerId,\n    );\n\n    /**\n     * Нативный свайпбек будет отключен только если больше не осталось тех, кому он нужен.\n     */\n    if (instance.swipeBackConsumers.length === 0) {\n      void bridge.send('VKWebAppSetSwipeSettings', { history: false });\n      void bridge.send('VKWebAppDisableSwipeBack');\n    }\n  }\n\n  private static get instance(): BridgeService {\n    if (!BridgeService._instance) {\n      BridgeService._instance = new BridgeService();\n    }\n    return BridgeService._instance;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}