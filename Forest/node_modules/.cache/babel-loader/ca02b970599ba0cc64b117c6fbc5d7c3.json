{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useActiveVkuiLocation } from '../hooks/useActiveVkuiLocation';\nimport { getDisplayName } from '../utils/utils';\nimport { useParams, usePopout, useRouteNavigator } from '../hooks/hooks';\nimport { useFirstPageCheck } from '../hooks/useFirstPageCheck';\nimport { useSearchParams } from '../hooks/useSearchParams';\n/**\n * HOC для добавления свойств\n *\n * location: {@link ActiveVkuiLocationObject}\n *\n * routeNavigator: {@link RouteNavigator}\n *\n * popout: {@link JSX.Element}\n *\n * params: {@link Params}\n *\n * isFirstPage: boolean\n *\n * searchParams: {@link URLSearchParams}\n *\n * setSearchParams: {@link SetURLSearchParams}\n *\n * в переданный компонент\n *\n * ```typescript\n * export default withRouter(App);\n * ```\n * @param Component\n */\n\nexport function withRouter(Component) {\n  function WithRouter(props) {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const routerProps = {\n      routeNavigator: useRouteNavigator(),\n      location: useActiveVkuiLocation(),\n      popout: usePopout(),\n      params: useParams(),\n      isFirstPage: useFirstPageCheck(),\n      searchParams,\n      setSearchParams\n    }; // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n\n    const propsWithRouter = { ...props,\n      ...routerProps\n    };\n    return _jsx(Component, { ...propsWithRouter\n    });\n  }\n\n  WithRouter.displayName = `WithRouter(${getDisplayName(Component)})`;\n  return WithRouter;\n}","map":{"version":3,"mappings":";AAAA,SAAmCA,qBAAnC,QAAgE,gCAAhE;AAGA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,iBAA/B,QAAwD,gBAAxD;AAEA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAA6BC,eAA7B,QAAoD,0BAApD;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAM,SAAUC,UAAV,CAA4CC,SAA5C,EAAuE;EAC3E,SAASC,UAAT,CAAoBC,KAApB,EAAqD;IACnD,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,eAAe,EAAvD;IACA,MAAMO,WAAW,GAAgB;MAC/BC,cAAc,EAAEV,iBAAiB,EADF;MAE/BW,QAAQ,EAAEf,qBAAqB,EAFA;MAG/BgB,MAAM,EAAEb,SAAS,EAHc;MAI/Bc,MAAM,EAAEf,SAAS,EAJc;MAK/BgB,WAAW,EAAEb,iBAAiB,EALC;MAM/BM,YAN+B;MAO/BC;IAP+B,CAAjC,CAFmD,CAWnD;;IACA,MAAMO,eAAe,GAAM,EACzB,GAAGT,KADsB;MAEzB,GAAGG;IAFsB,CAA3B;IAIA,OAAOO,KAACZ,SAAD,EAAU,KAAKW;IAAL,CAAV,CAAP;EACD;;EAEDV,UAAU,CAACY,WAAX,GAAyB,cAAcpB,cAAc,CAACO,SAAD,CAAW,GAAhE;EACA,OAAOC,UAAP;AACD","names":["useActiveVkuiLocation","getDisplayName","useParams","usePopout","useRouteNavigator","useFirstPageCheck","useSearchParams","withRouter","Component","WithRouter","props","searchParams","setSearchParams","routerProps","routeNavigator","location","popout","params","isFirstPage","propsWithRouter","_jsx","displayName"],"sources":["C:\\Users\\nasti\\Desktop\\VK\\ForestEm\\Forest\\node_modules\\@vkontakte\\vk-mini-apps-router\\src\\hoc\\withRouter.tsx"],"sourcesContent":["import { ActiveVkuiLocationObject, useActiveVkuiLocation } from '../hooks/useActiveVkuiLocation';\nimport { RouteNavigator } from '../services/RouteNavigator.type';\nimport { ComponentType } from 'react';\nimport { getDisplayName } from '../utils/utils';\nimport { useParams, usePopout, useRouteNavigator } from '../hooks/hooks';\nimport { Params } from '@remix-run/router';\nimport { useFirstPageCheck } from '../hooks/useFirstPageCheck';\nimport { SetURLSearchParams, useSearchParams } from '../hooks/useSearchParams';\n\ntype RouterProps = {\n  location: ActiveVkuiLocationObject;\n  routeNavigator: RouteNavigator;\n  popout: JSX.Element | null;\n  isFirstPage: boolean;\n  params?: Params;\n  searchParams: URLSearchParams;\n  setSearchParams: SetURLSearchParams;\n};\n\n/**\n * HOC для добавления свойств\n *\n * location: {@link ActiveVkuiLocationObject}\n *\n * routeNavigator: {@link RouteNavigator}\n *\n * popout: {@link JSX.Element}\n *\n * params: {@link Params}\n *\n * isFirstPage: boolean\n *\n * searchParams: {@link URLSearchParams}\n *\n * setSearchParams: {@link SetURLSearchParams}\n *\n * в переданный компонент\n *\n * ```typescript\n * export default withRouter(App);\n * ```\n * @param Component\n */\nexport function withRouter<T extends RouterProps>(Component: ComponentType<T>): ComponentType<Omit<T, keyof RouterProps>> {\n  function WithRouter(props: Omit<T, keyof RouterProps>) {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const routerProps: RouterProps = {\n      routeNavigator: useRouteNavigator(),\n      location: useActiveVkuiLocation(),\n      popout: usePopout(),\n      params: useParams(),\n      isFirstPage: useFirstPageCheck(),\n      searchParams,\n      setSearchParams,\n    };\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    const propsWithRouter: T = {\n      ...props,\n      ...routerProps,\n    } as T;\n    return <Component {...propsWithRouter} />;\n  }\n\n  WithRouter.displayName = `WithRouter(${getDisplayName(Component)})`;\n  return WithRouter;\n}\n"]},"metadata":{},"sourceType":"module"}