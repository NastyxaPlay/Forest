{"ast":null,"code":"import { createKey } from './utils';\nimport { createRouter } from '@remix-run/router';\nimport { InitialLocation } from '../services/InitialLocation';\nimport { createHashParamHistory } from './react-router-override/HashParamHistory';\nexport function createHashParamRouter(routes) {\n  // Задать новый key для новой локации в случае, если приложение уже запущено,\n  // а пользователь делает переход изменив hash в адресной строке браузера.\n  window.addEventListener('popstate', event => {\n    if (!event.state) {\n      window.history.replaceState({\n        key: createKey()\n      }, '');\n    }\n  });\n  const history = createHashParamHistory();\n  InitialLocation.init(history.location);\n  return createRouter({\n    history,\n    routes: routes.map(item => ({ ...item,\n      index: true\n    }))\n  }).initialize();\n}","map":{"version":3,"mappings":"AACA,SAASA,SAAT,QAA0B,SAA1B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,sBAAT,QAAuC,0CAAvC;AAEA,OAAM,SAAUC,qBAAV,CAAgCC,MAAhC,EAA4E;EAChF;EACA;EACAC,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAqCC,KAAD,IAAyB;IAC3D,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;MAChBH,MAAM,CAACI,OAAP,CAAeC,YAAf,CAA4B;QAAEC,GAAG,EAAEZ,SAAS;MAAhB,CAA5B,EAAkD,EAAlD;IACD;EACF,CAJD;EAKA,MAAMU,OAAO,GAAGP,sBAAsB,EAAtC;EACAD,eAAe,CAACW,IAAhB,CAAqBH,OAAO,CAACI,QAA7B;EACA,OAAOb,YAAY,CAAC;IAClBS,OADkB;IAElBL,MAAM,EAAEA,MAAM,CAACU,GAAP,CAAYC,IAAD,KAAW,EAAE,GAAGA,IAAL;MAAWC,KAAK,EAAE;IAAlB,CAAX,CAAX;EAFU,CAAD,CAAZ,CAGJC,UAHI,EAAP;AAID","names":["createKey","createRouter","InitialLocation","createHashParamHistory","createHashParamRouter","routes","window","addEventListener","event","state","history","replaceState","key","init","location","map","item","index","initialize"],"sources":["C:\\Users\\nasti\\Desktop\\VK\\ForestEm\\Forest\\node_modules\\@vkontakte\\vk-mini-apps-router\\src\\utils\\createHashParamRouter.ts"],"sourcesContent":["import { Router as RemixRouter } from '@remix-run/router/dist/router';\nimport { createKey } from './utils';\nimport { createRouter } from '@remix-run/router';\nimport { RouteWithoutRoot, RouteWithRoot } from '../type';\nimport { InitialLocation } from '../services/InitialLocation';\nimport { createHashParamHistory } from './react-router-override/HashParamHistory';\n\nexport function createHashParamRouter(routes: RouteWithRoot[] | RouteWithoutRoot[]): RemixRouter {\n  // Задать новый key для новой локации в случае, если приложение уже запущено,\n  // а пользователь делает переход изменив hash в адресной строке браузера.\n  window.addEventListener('popstate', (event: PopStateEvent) => {\n    if (!event.state) {\n      window.history.replaceState({ key: createKey() }, '');\n    }\n  });\n  const history = createHashParamHistory();\n  InitialLocation.init(history.location);\n  return createRouter({\n    history,\n    routes: routes.map((item) => ({ ...item, index: true })),\n  }).initialize();\n}\n"]},"metadata":{},"sourceType":"module"}