{"ast":null,"code":"export function uniqueKey(target, key) {\n  if (key && key.length && typeof target === 'object') {\n    if (target.hasOwnProperty(key)) {\n      const extendedKey = `${key}_0`;\n      return target.hasOwnProperty(extendedKey) ? uniqueKey(target, extendedKey) : extendedKey;\n    }\n  }\n\n  return key;\n}","map":{"version":3,"mappings":"AAqCA,OAAM,SAAUA,SAAV,CAAsDC,MAAtD,EAAmEC,GAAnE,EAAyE;EAC7E,IAAIA,GAAG,IAAIA,GAAG,CAACC,MAAX,IAAqB,OAAOF,MAAP,KAAkB,QAA3C,EAAqD;IACnD,IAAIA,MAAM,CAACG,cAAP,CAAsBF,GAAtB,CAAJ,EAAgC;MAC9B,MAAMG,WAAW,GAAG,GAAGH,GAAG,IAA1B;MACA,OAAQD,MAAM,CAACG,cAAP,CAAsBC,WAAtB,IAAqCL,SAAS,CAACC,MAAD,EAASI,WAAT,CAA9C,GAAsEA,WAA9E;IACD;EACF;;EACD,OAAOH,GAAP;AACD","names":["uniqueKey","target","key","length","hasOwnProperty","extendedKey"],"sources":["C:\\Users\\nasti\\Desktop\\VK\\ForestEm\\Forest\\node_modules\\@vkontakte\\vk-mini-apps-router\\src\\page-types\\common.ts"],"sourcesContent":["export type WithChildren<Target extends {}, Children extends {}> = Target & {\n  [key in keyof Children]: Children[key];\n};\n\nexport interface HasId<T extends string = string> {\n  id: T;\n}\n\nexport interface HasChildren<T extends {}> {\n  get children(): T[];\n}\n\nexport interface RepresentsRoutes<T> {\n  getRoutes(): T[];\n}\n\nexport type GetId<Obj extends HasId> = Obj extends { id: infer X } ? X : never;\n\nexport type AddChild<Target extends {}, V extends HasId> = WithChildren<Target, { [key in UniqueKey<Target, GetId<V>>]: V }>;\n\nexport interface Page {\n  path: string;\n  hasParams: false;\n}\n\nexport type WithParams<T extends string> = {\n  paramKeys: readonly T[];\n};\n\nexport interface PageWithParams<T extends string> extends WithParams<T> {\n  path: string;\n  hasParams: true;\n}\n\ntype UniqueKey<Obj extends {}, K extends string> = '' extends K ? K :\n  (K extends keyof Obj ? (`${K}_0` extends keyof Obj ? `${UniqueKey<Obj, `${K}_0`>}` : `${K}_0`) : K);\n\nexport function uniqueKey<Obj extends {}, K extends string>(target: Obj, key: K): UniqueKey<Obj, K> {\n  if (key && key.length && typeof target === 'object') {\n    if (target.hasOwnProperty(key)) {\n      const extendedKey = `${key}_0`;\n      return (target.hasOwnProperty(extendedKey) ? uniqueKey(target, extendedKey) : extendedKey) as UniqueKey<Obj, K>;\n    }\n  }\n  return key as UniqueKey<Obj, K>;\n}\n"]},"metadata":{},"sourceType":"module"}