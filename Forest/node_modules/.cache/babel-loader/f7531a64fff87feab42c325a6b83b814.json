{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Action } from '@remix-run/router';\nimport { PopoutContext, RouteContext, RouterContext, ThrottledContext } from '../contexts';\nimport { useEffect, useMemo, useState } from 'react';\nimport { DefaultRouteNavigator } from '../services/DefaultRouteNavigator';\nimport bridge from '@vkontakte/vk-bridge';\nimport { DefaultNotFound } from './DefaultNotFound';\nimport { getRouteContext, useForceUpdate } from '../utils/utils';\nimport { ViewHistory } from '../services/ViewHistory';\nimport { useBlockForwardToModals } from '../hooks/useBlockForwardToModals';\nimport { SEARCH_PARAM_INFLATE, STATE_KEY_SHOW_POPOUT, UNIVERSAL_URL } from '../const';\nimport { TransactionExecutor } from '../services/TransactionExecutor';\nimport { fillHistory } from '../utils/fillHistory';\nimport { createSearchParams } from '../utils/createSearchParams';\nexport function RouterProvider(_ref) {\n  let {\n    router,\n    children,\n    notFound,\n    hierarchy,\n    notFoundRedirectPath,\n    interval = 400,\n    useBridge = true,\n    throttled = true\n  } = _ref;\n  const forceUpdate = useForceUpdate();\n  const [popout, setPopout] = useState(null);\n  const [viewHistory] = useState(new ViewHistory());\n  const [panelsHistory, setPanelsHistory] = useState([]);\n  const [transactionExecutor, setTransactionExecutor] = useState(new TransactionExecutor(forceUpdate));\n  const isPopoutShown = router.state.location.state?.[STATE_KEY_SHOW_POPOUT];\n  const dataRouterContext = useMemo(() => {\n    const routeNavigator = new DefaultRouteNavigator(router, viewHistory, transactionExecutor, setPopout);\n    return {\n      router,\n      routeNavigator,\n      viewHistory\n    };\n  }, [router, viewHistory, transactionExecutor, setPopout]);\n  const throttlingOptions = useMemo(() => {\n    return {\n      enabled: throttled || Boolean(transactionExecutor.initialDelay),\n      firstActionDelay: transactionExecutor.initialDelay,\n      interval\n    };\n  }, [transactionExecutor.initialDelay, interval, throttled]);\n  const routeContext = useMemo(() => getRouteContext(router.state, panelsHistory), [router.state, panelsHistory]);\n  const dataPopoutContext = useMemo(() => {\n    return {\n      popout: isPopoutShown ? popout : null\n    };\n  }, [isPopoutShown, popout]);\n  useBlockForwardToModals(router, viewHistory, dataRouterContext.routeNavigator);\n  useEffect(() => {\n    // Отключаем браузерное восстановление скролла, используем решения от VKUI\n    history.scrollRestoration = \"manual\";\n    viewHistory.resetHistory();\n    viewHistory.updateNavigation({ ...router.state,\n      historyAction: Action.Push\n    });\n    setPanelsHistory(viewHistory.panelsHistory);\n    router.subscribe(state => {\n      viewHistory.updateNavigation(state);\n      setPanelsHistory(viewHistory.panelsHistory);\n      transactionExecutor.doNext();\n    });\n\n    if (useBridge) {\n      bridge.subscribe(event => {\n        if (event.detail.type === 'VKWebAppChangeFragment') {\n          router.navigate(event.detail.data.location, {\n            replace: true\n          });\n        }\n      });\n      router.subscribe(state => {\n        const location = router.createHref(state.location).replace(/^#/, '');\n        bridge.send('VKWebAppSetLocation', {\n          location,\n          replace_state: true\n        });\n      });\n    }\n\n    const executor = new TransactionExecutor(forceUpdate);\n    setTransactionExecutor(executor);\n    const searchParams = createSearchParams(router.state.location.search);\n    const enableFilling = Boolean(searchParams.get(SEARCH_PARAM_INFLATE));\n    hierarchy && enableFilling && fillHistory(hierarchy, dataRouterContext.routeNavigator, routeContext, executor);\n  }, [router]);\n  const routeNotFound = Boolean(!routeContext.match || routeContext.state.errors && routeContext.state.errors[routeContext.match.route.id] && routeContext.state.errors[routeContext.match.route.id].status === 404);\n\n  if (notFoundRedirectPath && (routeNotFound || routeContext.match?.route.path === UNIVERSAL_URL)) {\n    if (router.state.location.pathname === notFoundRedirectPath) {\n      console.warn('Incorrect notFoundRedirectPath');\n    } else dataRouterContext.routeNavigator.replace(notFoundRedirectPath);\n  }\n\n  return _jsx(RouterContext.Provider, {\n    value: dataRouterContext,\n    children: _jsx(ThrottledContext.Provider, {\n      value: throttlingOptions,\n      children: _jsxs(PopoutContext.Provider, {\n        value: dataPopoutContext,\n        children: [routeNotFound && (notFound || _jsx(DefaultNotFound, {\n          routeNavigator: dataRouterContext.routeNavigator\n        })), !routeNotFound && _jsx(RouteContext.Provider, {\n          value: routeContext,\n          children: children\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"mappings":"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","names":["Action","PopoutContext","RouteContext","RouterContext","ThrottledContext","useEffect","useMemo","useState","DefaultRouteNavigator","bridge","DefaultNotFound","getRouteContext","useForceUpdate","ViewHistory","useBlockForwardToModals","SEARCH_PARAM_INFLATE","STATE_KEY_SHOW_POPOUT","UNIVERSAL_URL","TransactionExecutor","fillHistory","createSearchParams","RouterProvider","router","children","notFound","hierarchy","notFoundRedirectPath","interval","useBridge","throttled","forceUpdate","popout","setPopout","viewHistory","panelsHistory","setPanelsHistory","transactionExecutor","setTransactionExecutor","isPopoutShown","state","location","dataRouterContext","routeNavigator","throttlingOptions","enabled","Boolean","initialDelay","firstActionDelay","routeContext","dataPopoutContext","history","scrollRestoration","resetHistory","updateNavigation","historyAction","Push","subscribe","doNext","event","detail","type","navigate","data","replace","createHref","send","replace_state","executor","searchParams","search","enableFilling","get","routeNotFound","match","errors","route","id","status","path","pathname","console","warn","_jsx","Provider","value","_jsxs"],"sources":["C:\\Users\\nasti\\Desktop\\VK\\ForestEm\\Forest\\node_modules\\@vkontakte\\vk-mini-apps-router\\src\\components\\RouterProvider.tsx"],"sourcesContent":["import { Action, Router } from '@remix-run/router';\nimport { PopoutContext, RouteContext, RouterContext, ThrottledContext } from '../contexts';\nimport { ReactElement, ReactNode, useEffect, useMemo, useState } from 'react';\nimport { DefaultRouteNavigator } from '../services/DefaultRouteNavigator';\nimport bridge from '@vkontakte/vk-bridge';\nimport { DefaultNotFound } from './DefaultNotFound';\nimport { getRouteContext, useForceUpdate } from '../utils/utils';\nimport { ViewHistory } from '../services/ViewHistory';\nimport { useBlockForwardToModals } from '../hooks/useBlockForwardToModals';\nimport { SEARCH_PARAM_INFLATE, STATE_KEY_SHOW_POPOUT, UNIVERSAL_URL } from '../const';\nimport { RouteNavigator } from '../services/RouteNavigator.type';\nimport { TransactionExecutor } from '../services/TransactionExecutor';\nimport { fillHistory } from '../utils/fillHistory';\nimport { createSearchParams } from '../utils/createSearchParams';\nimport { RouteLeaf } from '../type';\n\nexport interface RouterProviderProps {\n  router: Router;\n  children: ReactNode;\n  interval?: number;\n  useBridge?: boolean;\n  throttled?: boolean;\n  hierarchy?: RouteLeaf[];\n  notFound?: ReactNode;\n  notFoundRedirectPath?: string;\n}\n\nexport function RouterProvider({\n  router,\n  children,\n  notFound,\n  hierarchy,\n  notFoundRedirectPath,\n  interval = 400,\n  useBridge = true,\n  throttled = true,\n}: RouterProviderProps): ReactElement {\n  const forceUpdate = useForceUpdate();\n  const [popout, setPopout] = useState<JSX.Element | null>(null);\n  const [viewHistory] = useState<ViewHistory>(new ViewHistory());\n  const [panelsHistory, setPanelsHistory] = useState<string[]>([]);\n  const [transactionExecutor, setTransactionExecutor] = useState<TransactionExecutor>(\n    new TransactionExecutor(forceUpdate),\n  );\n  const isPopoutShown = router.state.location.state?.[STATE_KEY_SHOW_POPOUT];\n\n  const dataRouterContext = useMemo(() => {\n    const routeNavigator: RouteNavigator = new DefaultRouteNavigator(\n      router,\n      viewHistory,\n      transactionExecutor,\n      setPopout,\n    );\n    return { router, routeNavigator, viewHistory };\n  }, [router, viewHistory, transactionExecutor, setPopout]);\n\n  const throttlingOptions = useMemo(() => {\n    return {\n      enabled: throttled || Boolean(transactionExecutor.initialDelay),\n      firstActionDelay: transactionExecutor.initialDelay,\n      interval,\n    };\n  }, [transactionExecutor.initialDelay, interval, throttled]);\n\n  const routeContext = useMemo(\n    () => getRouteContext(router.state, panelsHistory),\n    [router.state, panelsHistory],\n  );\n\n  const dataPopoutContext = useMemo(() => {\n    return { popout: isPopoutShown ? popout : null };\n  }, [isPopoutShown, popout]);\n\n  useBlockForwardToModals(router, viewHistory, dataRouterContext.routeNavigator);\n  useEffect(() => {\n    // Отключаем браузерное восстановление скролла, используем решения от VKUI\n    history.scrollRestoration = \"manual\";\n\n    viewHistory.resetHistory();\n    viewHistory.updateNavigation({ ...router.state, historyAction: Action.Push });\n    setPanelsHistory(viewHistory.panelsHistory);\n\n    router.subscribe((state) => {\n      viewHistory.updateNavigation(state);\n      setPanelsHistory(viewHistory.panelsHistory);\n      transactionExecutor.doNext();\n    });\n\n    if (useBridge) {\n      bridge.subscribe((event) => {\n        if (event.detail.type === 'VKWebAppChangeFragment') {\n          router.navigate(event.detail.data.location, { replace: true });\n        }\n      });\n      router.subscribe((state) => {\n        const location = router.createHref(state.location).replace(/^#/, '');\n        bridge.send('VKWebAppSetLocation', { location, replace_state: true });\n      });\n    }\n\n    const executor = new TransactionExecutor(forceUpdate);\n    setTransactionExecutor(executor);\n    const searchParams = createSearchParams(router.state.location.search);\n    const enableFilling = Boolean(searchParams.get(SEARCH_PARAM_INFLATE));\n    hierarchy &&\n      enableFilling &&\n      fillHistory(hierarchy, dataRouterContext.routeNavigator, routeContext, executor);\n  }, [router]);\n\n  const routeNotFound = Boolean(\n    !routeContext.match ||\n    (routeContext.state.errors &&\n      routeContext.state.errors[routeContext.match.route.id] &&\n      routeContext.state.errors[routeContext.match.route.id].status === 404),\n  );\n\n  if (notFoundRedirectPath && (routeNotFound || routeContext.match?.route.path === UNIVERSAL_URL)) {\n    if (router.state.location.pathname === notFoundRedirectPath) {\n      console.warn('Incorrect notFoundRedirectPath');\n    } else dataRouterContext.routeNavigator.replace(notFoundRedirectPath);\n  }\n\n  return (\n    <RouterContext.Provider value={dataRouterContext}>\n      <ThrottledContext.Provider value={throttlingOptions}>\n        <PopoutContext.Provider value={dataPopoutContext}>\n          {routeNotFound &&\n            (notFound || <DefaultNotFound routeNavigator={dataRouterContext.routeNavigator} />)}\n          {!routeNotFound && <RouteContext.Provider value={routeContext} children={children} />}\n        </PopoutContext.Provider>\n      </ThrottledContext.Provider>\n    </RouterContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}